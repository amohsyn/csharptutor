@model JustBlog.Models.ListViewModel

@* Read the current page and total pages *@
 
@{
  var currentPage = ViewContext.RequestContext.HttpContext.Request["p"] != null 
    ? int.Parse(ViewContext.RequestContext.HttpContext.Request["p"]) 
    : 1;
     
  var totalPages = Math.Ceiling((double)Model.TotalPosts / 10);  
}
 
@* Check do we need to display pagination links *@
 
@if (currentPage > 1 || currentPage < totalPages)
{
  var p = string.Format("p={0}", currentPage - 1);
  var n = string.Format("p={0}", currentPage + 1);
 
  @* If the view is rendered for "search" action append the pagination value with "&" *@
   
  if (ViewContext.RouteData.Values["action"].ToString()
    .Equals("search", StringComparison.OrdinalIgnoreCase))
  {
    var s = String.Format("?s={0}", ViewContext.RequestContext.HttpContext.Request.QueryString["s"]);
    p = String.Format("{0}&{1}", s, p);
    n = String.Format("{0}&{1}", s, n);
  }
  else
  {
    p = String.Concat("?", p);
    n = String.Concat("?", n);
  }
   
  <!--pagination links-->
  <nav>
  <ul class="pager">
          
    <li class="next"><a href="@n"style="visibility:@(currentPage < totalPages ? "visible" : "collapse")">Older <span aria-hidden="true">&rarr;</span></a></li>
    <li class="previous"><a href="@p" style="visibility:@(currentPage > 1 ? "visible" : "collapse")"><span aria-hidden="true">&larr;</span> Newer</a></li>
  </ul>
</nav>
 
}
